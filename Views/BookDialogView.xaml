<UserControl x:Class="WPF_Bookshelf.Views.BookDialogView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:WPF_Bookshelf.Views"
             xmlns:val="clr-namespace:WPF_Bookshelf.ViewModels.Validators"
             mc:Ignorable="d" 
             Height="450" Width="800">
    <!--Resourses-->
    <UserControl.Resources>
        <Style TargetType="TextBox">
            <Style.Triggers>
                <Trigger Property="Validation.HasError" Value="true">
                    <Setter Property="ToolTip" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Validation.Errors)[0].ErrorContent}"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <ControlTemplate x:Key="validationTemplate">
            <DockPanel>
                <AdornedElementPlaceholder/>
                <TextBlock Foreground="Red" FontSize="18">!!!!</TextBlock>
            </DockPanel>
        </ControlTemplate>
        <local:CategoryToImage x:Key="catToImgConverter"/>
    </UserControl.Resources>
    <!--Body-->
    <Grid Margin="10,10,10,0">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto" />
            <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="10" />
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="10" />
        </Grid.RowDefinitions>

        <!--Title-->
        <Label Content="Title"/>
        <TextBox x:Name="bookTitle" Validation.ErrorTemplate="{StaticResource validationTemplate}" Grid.Column="1" Margin="0,0,0,10" >
            <TextBox.Text>
                <Binding Path="Title" TargetNullValue="" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged">
                    <Binding.ValidationRules>
                        <val:TitleValidationRule/>
                    </Binding.ValidationRules>
                </Binding>
            </TextBox.Text>
        </TextBox>
        
        <!--Author-->
        <Label Content="Author" Grid.Row="1"/>
        <TextBox x:Name="bookAuthor" Validation.ErrorTemplate="{StaticResource validationTemplate}" Grid.Row="1" Grid.Column="1" Margin="0,0,0,10" >
            <TextBox.Text>
                <Binding Path="Author" TargetNullValue="" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged">
                    <Binding.ValidationRules>
                        <val:AuthorValidationRule/>
                    </Binding.ValidationRules>
                </Binding>
            </TextBox.Text>
        </TextBox>
        
        <!--Year-->
        <Label  Content="Year" Grid.Row="2"/>
        <TextBox x:Name="bookYear" Validation.ErrorTemplate="{StaticResource validationTemplate}" Grid.Row="2" Grid.Column="1" Margin="0,0,0,10" AcceptsReturn="True" >
            <TextBox.Text>
                <Binding Path="Year" TargetNullValue="" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged">
                    <Binding.ValidationRules>
                        <val:YearValidationRule/>
                    </Binding.ValidationRules>
                </Binding>
            </TextBox.Text>
        </TextBox>
        
        <!--Category-->
        <Label Content="Category" Grid.Row="3"/>
        <TextBox Text="{Binding Category}" IsReadOnly="True" Grid.Row="3" Grid.Column="1" Margin="0,0,0,10" AcceptsReturn="True" />
        
        <!--<uc:CategoryControl x:Name="categoryControl" ImageSource="{Binding Category, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource catToImgConverter}}" Grid.Row="4" Grid.Column="2" />-->
        <local:CategoryControl x:Name="categoryControl" ImageSource="{Binding Category, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource catToImgConverter}}"  Grid.Row="5" Grid.Column="1" Margin="0.4,0.2,0,24.6" Grid.RowSpan="2" Width="200" Height="200"/>
        <!--<Image Source="{Binding DisplayedImagePath, UpdateSourceTrigger=PropertyChanged}" Height="200" Width="200"  Grid.Row="4" Grid.Column="2" ></Image>-->
        
        <!--Ok/Cancel-->
        <Grid Grid.Row="7" Grid.Column="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition/>
                <ColumnDefinition Width="200"/>
                <ColumnDefinition Width="200"/>
            </Grid.ColumnDefinitions>

            <Button Content="Cancel" Command="{Binding Path=CancelCommand}"  CommandParameter="{Binding RelativeSource={RelativeSource Self}, Path=DataContext}" Grid.Row="1" Grid.Column="2" Height="25" Width="100" MinWidth="100"/>
            <Button Content="Ok" Command="{Binding Path=OkCommand}" CommandParameter="{Binding RelativeSource={RelativeSource Self}, Path=DataContext}" Grid.Row="1" Grid.Column="1" Height="25" Width="100" MinWidth="100">
                <Button.Style>
                    <Style TargetType="Button">
                        <Setter Property="IsEnabled" Value="False"/>
                        <Style.Triggers>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding Path=(Validation.HasError), ElementName=bookTitle}" Value="False"/>
                                    <Condition Binding="{Binding Path=(Validation.HasError), ElementName=bookAuthor}" Value="False"/>
                                    <Condition Binding="{Binding Path=(Validation.HasError), ElementName=bookYear}" Value="False"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="IsEnabled" Value="True"/>
                            </MultiDataTrigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
            </Button>
        </Grid>

    </Grid>
</UserControl>
